#BlueJ class context
comment0.params=nrow\ ncol\ file
comment0.target=GridMap(int,\ int,\ java.io.File)
comment0.text=\n\ This\ constructor\ takes\ in\ a\ bitmask\ ASCII\ file\ to\ create\ a\ new\ map.\n\ \n\ @param\ nrow\ The\ number\ of\ rows\ for\ the\ map.\n\ @param\ ncol\ The\ number\ of\ columns\ for\ the\ map.\n\ @param\ file\ The\ incoming\ bitmask\ ASCII\ file.\n
comment1.params=nrow\ ncol
comment1.target=GridMap(int,\ int)
comment1.text=\n\ Constructor\ where\ a\ map\ can\ be\ created\ from\ a\ given\ number\ of\ input\ columns\ and\ rows\ and\ it\n\ then\ randomly\ generates\ a\ map\ with\ those\ dimensions\ where\ (roughly)\ 25%\ of\ the\ map\ is\ water.\ \n\ \n\ @param\ nrow\ The\ number\ of\ rows\ for\ the\ map.\n\ @param\ ncol\ The\ number\ of\ columns\ for\ the\ map.\n
comment2.params=row\ col
comment2.target=int\ getDryNeighbors(int,\ int)
comment2.text=\n\ This\ method\ returns\ the\ number\ of\ dry\ squares\ adjacent\ to\ the\ square\ at\ map[row][col]\n\ using\ the\ square's\ data\ coordinates.\n\ \n\ @param\ row\ The\ row\ of\ the\ square's\ data\ coordinates.\n\ @param\ col\ The\ column\ of\ the\ square's\ data\ coordinates.\n\ \n\ @return\ The\ number\ of\ dry\ neighbors\n
comment3.params=row\ col
comment3.target=boolean\ isDry(int,\ int)
comment3.text=\n\ This\ method\ returns\ true\ if\ the\ square\ is\ dry\ land.\n\ \n\ @param\ row\ The\ row\ of\ the\ square\ in\ terms\ of\ map\ coordinates.\n\ @param\ col\ The\ column\ of\ the\ square\ in\ terms\ of\ map\ coordinates.\n\ \n\ @return\ True\ is\ the\ neighbor\ is\ dry.\ \n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\n\ This\ method\ prints\ out\ a\ graphical\ representation\ of\ the\ map.\ \n\ \n\ @return\ Graphic\ representation\ of\ the\ map.\n
comment5.params=
comment5.target=int\ getNCols()
comment5.text=\n\ This\ method\ returns\ the\ number\ of\ columns\ in\ the\ map.\n\ \n\ @return\ The\ number\ of\ columns\ in\ the\ map.\n
comment6.params=
comment6.target=int\ getNRows()
comment6.text=\n\ This\ method\ returns\ the\ number\ of\ rows\ in\ the\ map.\n\ \n\ @return\ The\ number\ of\ rows\ in\ the\ map.\n
numComments=7
